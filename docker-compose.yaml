version: '3.8'

services:
  postgres:
    image: postgres
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
       - ./query/sql/pg_up_001.sql:/docker-entrypoint-initdb.d/pg_up_001.sql
       - ./query/sql/pg_up_002.sql:/docker-entrypoint-initdb.d/pg_up_002.sql
    command: |
      postgres 
      -c wal_level=logical 
    networks:
      - net

  elastic:
    image: elasticsearch:7.10.1
    env_file:
      - .env
    ports:
      - 9200:9200
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
    networks:
      - net

  neo4j:
    image: neo4j:4.2.3
    env_file:
      - .env
    ports:
      - 7474:7474
      - 7687:7687
    environment:
       - NEO4J_PLUGINS=["apoc"]
       - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
       - NEO4J_server_config_strict__validation_enabled=false
    networks:
      - net

  app:
    build: .
    env_file:
      - .env
    ports:
      - ${LOCAL_SERVICES_PORT}:4040
    depends_on:
      - postgres
      - neo4j
      - elastic
    networks:
      - net

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    ports:
      - 2181:2181
      - 2888:2888
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - net

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    # volumes:
    #   - kafka:/var/lib/kafka/data
    networks:
      - net

  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.0
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:9092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - net

  connect:
    image: confluentinc/cp-kafka-connect-base:6.2.0
    ports:
      - "8083:8083"
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    volumes:
      - ./plagins/postgresql-42.7.3.jar:/usr/share/java/postgresql-jdbc-driver.jar
      - ./plagins:/usr/share/java/kafka-connect-jdbc
      - ./config/connect-standalone.properties:/etc/kafka/connect-standalone.properties
      - ./config/postgres-source.properties:/etc/kafka/postgres-source.properties
      - ./config/neo4j-sink.properties:/etc/kafka/neo4j-sink.properties
      - ./config/elastic-sink.properties:/etc/kafka/elastic-sink.properties
    command:
      - "bash"
      - "-c"
      - |
        confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:latest && \
        confluent-hub install --no-prompt neo4j/kafka-connect-neo4j:latest && \
        confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:latest && \
        connect-standalone /etc/kafka/connect-standalone.properties /etc/kafka/postgres-source.properties /etc/kafka/neo4j-sink.properties /etc/kafka/elastic-sink.properties && \
        /etc/confluent/docker/run
    networks:
      - net

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.2.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka
      - schema-registry
      - connect
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 1
      CONTROL_CENTER_STREAMS_CACHE_MAX_BYTES_BUFFERING: 104857600
      PORT: 9021
    command:
      - bash
      - -c 
      - |
        /etc/confluent/docker/run
    networks:
      - net
      
networks:
  net:

volumes:
  kafka: